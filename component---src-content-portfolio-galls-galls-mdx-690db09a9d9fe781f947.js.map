{"version":3,"sources":["webpack:///./src/content/portfolio/Galls/galls.mdx"],"names":["query","_frontmatter","makeShortcode","name","props","console","warn","GridTwo","ImageContainer","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","classes","fluid","data","galls1","childImageSharp","galls2","className","galls3","galls4","galls5","galls6","galls7","galls8","galls9","galls10","galls11","galls16","galls12","galls13","galls14","galls15","isMDXComponent"],"mappings":"sTAOO,IAAMA,EAAQ,aAoHRC,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAiBN,EAAc,kBAC/BO,EAAc,CAClBT,QACAC,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,E,oIACF,mBACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAK5E,YAACP,EAAD,CAASO,QAAQ,WACf,YAACN,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKC,OAAOC,gBAAgBH,MAAOF,QAAQ,mBACxF,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKG,OAAOD,gBAAgBH,MAAOF,QAAQ,mBAC9F,iBAAGO,UAAU,kCAAb,sOACA,YAACb,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKK,OAAOH,gBAAgBH,MAAOF,QAAQ,mBACxF,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKM,OAAOJ,gBAAgBH,MAAOF,QAAQ,mBAC9F,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKO,OAAOL,gBAAgBH,MAAOF,QAAQ,mBAC9F,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKQ,OAAON,gBAAgBH,MAAOF,QAAQ,mBAC9F,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKS,OAAOP,gBAAgBH,MAAOF,QAAQ,mBAC9F,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKU,OAAOR,gBAAgBH,MAAOF,QAAQ,mBAC9F,YAACN,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKW,OAAOT,gBAAgBH,MAAOF,QAAQ,mBACxF,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKY,QAAQV,gBAAgBH,MAAOF,QAAQ,mBAC/F,iBAAGO,UAAU,kCAAb,uUACA,YAACb,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKa,QAAQX,gBAAgBH,MAAOF,QAAQ,mBACzF,YAACN,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKc,QAAQZ,gBAAgBH,MAAOF,QAAQ,mBACzF,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKe,QAAQb,gBAAgBH,MAAOF,QAAQ,mBAC/F,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKgB,QAAQd,gBAAgBH,MAAOF,QAAQ,mBAC/F,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKiB,QAAQf,gBAAgBH,MAAOF,QAAQ,mBAC/F,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKkB,QAAQhB,gBAAgBH,MAAOF,QAAQ,mBAC/F,iBAAGO,UAAU,yBAAb,uEAMNT,EAAWwB,gBAAiB","file":"component---src-content-portfolio-galls-galls-mdx-690db09a9d9fe781f947.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/alanfung/Documents/Projects/Code/gatsby-portfolio/src/templates/portfolio.js\";\nimport { graphql } from \"gatsby\";\nexport const query = graphql`\n  query {\n    galls1: file(relativePath: { eq: \"Galls/galls-01.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls2: file(relativePath: { eq: \"Galls/galls-02.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls3: file(relativePath: { eq: \"Galls/galls-03.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls4: file(relativePath: { eq: \"Galls/galls-04.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls5: file(relativePath: { eq: \"Galls/galls-05.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls6: file(relativePath: { eq: \"Galls/galls-06.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls7: file(relativePath: { eq: \"Galls/galls-07.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls8: file(relativePath: { eq: \"Galls/galls-08.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls9: file(relativePath: { eq: \"Galls/galls-09.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls10: file(relativePath: { eq: \"Galls/galls-10.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls11: file(relativePath: { eq: \"Galls/galls-11.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls12: file(relativePath: { eq: \"Galls/galls-12.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls13: file(relativePath: { eq: \"Galls/galls-13.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls14: file(relativePath: { eq: \"Galls/galls-14.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls15: file(relativePath: { eq: \"Galls/galls-15.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    galls16: file(relativePath: { eq: \"Galls/galls-16.png\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst GridTwo = makeShortcode(\"GridTwo\");\nconst ImageContainer = makeShortcode(\"ImageContainer\");\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <GridTwo mdxType=\"GridTwo\">\n      <ImageContainer classes=\"large\" fluid={props.data.galls1.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls2.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small space-me right blog-text\">For the new design - we went with Industry Inc. The font portrays strength and sturdiness with its shape and symbolizes the courage of the men and women in the public safety industry that serve and protect us on a daily basis.</p>\n      <ImageContainer classes=\"large\" fluid={props.data.galls3.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls4.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls5.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls6.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls7.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls8.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"large\" fluid={props.data.galls9.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls10.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small space-me right blog-text\">The product cards were designed to be versitle and scalable. From desktop to mobile, the focus is kept on the product with the most important information remaining at each breakpoint. The compare component displays a modal on the same page so that users won't be navigated away from their current browsing search or filter.</p>\n      <ImageContainer classes=\"small\" fluid={props.data.galls11.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small\" fluid={props.data.galls16.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls12.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls13.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls14.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.galls15.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small right blog-text\">Please contact me if you'd like to learn more about this project.</p>\n    </GridTwo>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}