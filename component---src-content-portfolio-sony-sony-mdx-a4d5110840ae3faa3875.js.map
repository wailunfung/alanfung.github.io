{"version":3,"sources":["webpack:///./src/content/portfolio/Sony/sony.mdx"],"names":["query","_frontmatter","makeShortcode","name","props","console","warn","GridTwo","ImageContainer","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","classes","fluid","data","sony1","childImageSharp","sony2","className","sony3","sony4","sony5","sony7","sony6","sony8","sony9","sony10","isMDXComponent"],"mappings":"sTAOO,IAAMA,EAAQ,YA0ERC,EAAe,GAEtBC,EAAgB,SAAAC,GAAI,OAAI,SAA6BC,GAEzD,OADAC,QAAQC,KAAK,aAAeH,EAAO,2EAC5B,kBAASC,KAGZG,EAAUL,EAAc,WACxBM,EAAiBN,EAAc,kBAC/BO,EAAc,CAClBT,QACAC,gBAEIS,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGT,E,oIACF,mBACD,OAAO,YAACM,EAAD,iBAAeD,EAAiBL,EAAhC,CAAuCS,WAAYA,EAAYC,QAAQ,cAK5E,YAACP,EAAD,CAASO,QAAQ,WACf,YAACN,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKC,MAAMC,gBAAgBH,MAAOF,QAAQ,mBACvF,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKG,MAAMD,gBAAgBH,MAAOF,QAAQ,mBAC7F,iBAAGO,UAAU,yBAAb,kUACA,YAACb,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKK,MAAMH,gBAAgBH,MAAOF,QAAQ,mBACvF,YAACN,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKM,MAAMJ,gBAAgBH,MAAOF,QAAQ,mBACvF,YAACN,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKO,MAAML,gBAAgBH,MAAOF,QAAQ,mBAC7F,iBAAGO,UAAU,yBAAb,2EACA,YAACb,EAAD,CAAgBO,QAAQ,cAAcC,MAAOZ,EAAMa,KAAKQ,MAAMN,gBAAgBH,MAAOF,QAAQ,mBAC7F,YAACN,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKS,MAAMP,gBAAgBH,MAAOF,QAAQ,mBACvF,iBAAGO,UAAU,yBAAb,4VACA,YAACb,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKU,MAAMR,gBAAgBH,MAAOF,QAAQ,mBACvF,YAACN,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKW,MAAMT,gBAAgBH,MAAOF,QAAQ,mBACvF,iBAAGO,UAAU,yBAAb,+RACA,YAACb,EAAD,CAAgBO,QAAQ,QAAQC,MAAOZ,EAAMa,KAAKY,OAAOV,gBAAgBH,MAAOF,QAAQ,mBACxF,iBAAGO,UAAU,yBAAb,uEAMNT,EAAWkB,gBAAiB","file":"component---src-content-portfolio-sony-sony-mdx-a4d5110840ae3faa3875.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/alanfung/Documents/Projects/Code/gatsby-portfolio/src/templates/portfolio.js\";\nimport { graphql } from \"gatsby\";\nexport const query = graphql`\n  query {\n    sony1: file(relativePath: { eq: \"Sony/sony-01.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony2: file(relativePath: { eq: \"Sony/sony-02.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony3: file(relativePath: { eq: \"Sony/sony-03.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony4: file(relativePath: { eq: \"Sony/sony-04.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony5: file(relativePath: { eq: \"Sony/sony-05.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony6: file(relativePath: { eq: \"Sony/sony-06.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony7: file(relativePath: { eq: \"Sony/sony-07.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony8: file(relativePath: { eq: \"Sony/sony-08.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony9: file(relativePath: { eq: \"Sony/sony-09.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    sony10: file(relativePath: { eq: \"Sony/sony-10.png\"}) {\n      childImageSharp {\n        fluid(maxWidth: 1600, quality: 100) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n  }\n`;\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst GridTwo = makeShortcode(\"GridTwo\");\nconst ImageContainer = makeShortcode(\"ImageContainer\");\nconst layoutProps = {\n  query,\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <GridTwo mdxType=\"GridTwo\">\n      <ImageContainer classes=\"large\" fluid={props.data.sony1.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.sony2.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small right blog-text\">The Sony Design System did not rely on rigid page templates. Instead, we created a flexible system of modules that could easily be rearranged and customized, per page. Our system consisted of a carefully designed library of interaction patterns and content layouts, that could seamlessly stack and rearrange on a page.</p>\n      <ImageContainer classes=\"small\" fluid={props.data.sony3.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small\" fluid={props.data.sony4.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small right\" fluid={props.data.sony5.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small right blog-text\">The module system is extensive and included every imaginable variation.</p>\n      <ImageContainer classes=\"small right\" fluid={props.data.sony7.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"large\" fluid={props.data.sony6.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small right blog-text\">One key aspect of the Sony design system was to support multi-screen browsing experiences. The challenge in this task was strategically designing system level flexibility into components and modules that could react to devices and screen sizes. It was just as important to support a viewing experience on touch devices as it was on the desktop.</p>\n      <ImageContainer classes=\"small\" fluid={props.data.sony8.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <ImageContainer classes=\"small\" fluid={props.data.sony9.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small right blog-text\">Design direction for Sony meant appealing to the cultures and needs of the entire globe. Our web product served 110 different countries and was translated into 30 languages. We strove for universal appeal with design, experience, and content while customizing per locale as required.</p>\n      <ImageContainer classes=\"large\" fluid={props.data.sony10.childImageSharp.fluid} mdxType=\"ImageContainer\" />\n      <p className=\"small right blog-text\">Please contact me if you'd like to learn more about this project.</p>\n    </GridTwo>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}